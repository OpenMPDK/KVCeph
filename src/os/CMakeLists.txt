set(libos_srcs
  ObjectStore.cc
  Transaction.cc
  filestore/chain_xattr.cc
  filestore/BtrfsFileStoreBackend.cc
  filestore/DBObjectMap.cc
  filestore/FileJournal.cc
  filestore/FileStore.cc
  filestore/JournalThrottle.cc
  filestore/GenericFileStoreBackend.cc
  filestore/JournalingObjectStore.cc
  filestore/HashIndex.cc
  filestore/IndexManager.cc
  filestore/LFNIndex.cc
  filestore/WBThrottle.cc
  memstore/MemStore.cc

  kvsstore/keyencoder.h
  kvsstore/kvssd_types.h
  kvsstore/KvsStore.cc
  kvsstore/KvsStore.h
  kvsstore/kvsstore_cache.cc
  kvsstore/kvsstore_db.cc
  kvsstore/kvsstore_db.h
  kvsstore/kvsstore_debug.h
  kvsstore/kvsstore_debug_impl.h
  kvsstore/kvsstore_types.cc
  kvsstore/kvsstore_types.h
  kvsstore/kvsstore_omap.cc
  kvsstore/kvsstore_omap.h
  kvsstore/os_adapter.cc
  kvsstore/os_adapter.h
  kvsstore/kadi/kadi_bptree.h
  kvsstore/kadi/kadi_cmds.cc
  kvsstore/kadi/kadi_cmds.h
  kvsstore/kadi/kadi_helpers.cc
  kvsstore/kadi/kadi_helpers.h
  kvsstore/kadi/kadi_nodepool.cc
  kvsstore/kadi/kadi_nodepool.h
  kvsstore/kadi/kadi_slottedpage.h
  kvsstore/kadi/kadi_types.h
  kvsstore/kadi/linux_nvme_ioctl.h
  
  kstore/KStore.cc
  kstore/kstore_types.cc
  fs/FS.cc)


if(WITH_BLUESTORE)
  list(APPEND libos_srcs
    bluestore/Allocator.cc
    bluestore/BitmapFreelistManager.cc
    bluestore/BlockDevice.cc
    bluestore/BlueFS.cc
    bluestore/bluefs_types.cc
    bluestore/BlueRocksEnv.cc
    bluestore/BlueStore.cc
    bluestore/bluestore_types.cc
    bluestore/fastbmap_allocator_impl.cc
    bluestore/FreelistManager.cc
    bluestore/StupidAllocator.cc
    bluestore/BitmapAllocator.cc
    bluestore/AvlAllocator.cc
  )
endif(WITH_BLUESTORE)

if(HAVE_LIBAIO OR HAVE_POSIXAIO)
  list(APPEND libos_srcs
    bluestore/KernelDevice.cc
    bluestore/aio.cc)
endif()

if(WITH_FUSE)
  list(APPEND libos_srcs
    FuseStore.cc)
endif(WITH_FUSE)

if(WITH_BLUESTORE_PMEM)
  list(APPEND libos_srcs
    bluestore/PMEMDevice.cc)
endif()

if(HAVE_LIBXFS)
  list(APPEND libos_srcs
    filestore/XfsFileStoreBackend.cc
    fs/XFS.cc)
endif()

if(HAVE_LIBZFS)
  add_library(os_zfs_objs OBJECT
    filestore/ZFSFileStoreBackend.cc
    fs/ZFS.cc)
  target_include_directories(os_zfs_objs SYSTEM PRIVATE
    ${ZFS_INCLUDE_DIRS})
  list(APPEND libos_srcs $<TARGET_OBJECTS:os_zfs_objs>)
endif()

if(WITH_SPDK)
  list(APPEND libos_srcs
    bluestore/NVMEDevice.cc)
endif()

add_library(os STATIC ${libos_srcs})

target_link_libraries(os heap_profiler kv)

if(WITH_BLUEFS)
  add_library(bluefs SHARED 
    bluestore/BlueRocksEnv.cc)
  target_include_directories(bluefs SYSTEM PUBLIC
    $<TARGET_PROPERTY:RocksDB::RocksDB,INTERFACE_INCLUDE_DIRECTORIES>)
  target_link_libraries(bluefs global)
  install(TARGETS bluefs DESTINATION lib)
endif(WITH_BLUEFS)

if(HAVE_LIBAIO)
  target_link_libraries(os ${AIO_LIBRARIES})
endif(HAVE_LIBAIO)

if(WITH_FUSE)
  target_include_directories(os SYSTEM PRIVATE ${FUSE_INCLUDE_DIRS})
  target_link_libraries(os ${FUSE_LIBRARIES})
endif()

if(HAVE_LIBZFS)
  target_link_libraries(os ${ZFS_LIBRARIES})
endif()

if(WITH_SPDK)
  target_link_libraries(os
    ${SPDK_LIBRARIES})
endif()

if(WITH_LTTNG)
  add_dependencies(os objectstore-tp)
  add_dependencies(os bluestore-tp)
endif()

target_link_libraries(os kv)

add_dependencies(os compressor_plugins)
add_dependencies(os crypto_plugins)


if(WITH_BLUESTORE)
  add_executable(ceph-bluestore-tool
    bluestore/bluestore_tool.cc)
  target_link_libraries(ceph-bluestore-tool
    os global)
  install(TARGETS ceph-bluestore-tool
    DESTINATION bin)
endif()

if(WITH_BLUESTORE_PMEM)
  target_link_libraries(os pmem::pmem)
endif()

if(WITH_EVENTTRACE)
  add_dependencies(os eventtrace_tp)
endif()
